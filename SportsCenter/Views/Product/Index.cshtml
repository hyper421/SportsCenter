<script src="https://cdn.jsdelivr.net/npm/vue@2.7.10/dist/vue.js"></script>
<div class="back_re">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="title">
                    <h2>購物商城</h2>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid p-5" id="product">
    <div class="row">
        <!-- col -->
        <aside class="col-lg-3 col-md-4 mb-md-0">
            <div class="offcanvas offcanvas-start offcanvas-collapse w-md-50" tabindex="-1" id="offcanvasCategory"
                 aria-labelledby="offcanvasCategoryLabel">
                <div class="offcanvas-header d-lg-none">
                    <h5 class="offcanvas-title" id="offcanvasCategoryLabel">Filter</h5>
                    <button type="button" class="btn-close" data-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body ps-lg-2 pt-lg-0">
                    <div class="mb-8">
                        <!-- title -->
                        <h5 class="mb-3">種類</h5>
                        <!-- 商品種類 -->
                        <ul class="accordion mb-4" id="categoryCollapseMenu" v-for="(item,index) in items" :key="index">
                            <li class="nav-item border-bottom w-100 collapsed" data-toggle="collapse"
                                data-target="#category1" aria-expanded="false" aria-controls="category1">
                                <a class="nav-link d-flex justify-content-between align-items-center"
                                   @@click="selectType(index)">{{item.name}}<i class="fa fa-chevron-right"></i></a>
                            </li>
                        </ul>
                    </div>
                    <div class="mb-8">
                        <h2 class="mb-3">搜尋</h2>
                        <div class="my-4">
                            <input type="search" v-model.lazy.trim="keywords" class="form-control" placeholder="搜尋...">
                        </div>
                        <div class="mb-8">
                            <h2 class="mb-3">價格區間</h2>
                            <div class="form-group">
                                <label for="formControlRange">預算:</label>
                                <div>
                                    <input v-model.lazy.trim="price" type="range" value="30000" min="1" max="30000"
                                           oninput="this.nextElementSibling.value = this.value">
                                    <output></output>
                                </div>
                            </div>
                        </div>
                        <div class="mb-8">
                            <button href="~/product/index" @@click="reset" type="submit" class="btn btn-danger">reset all</button>
                        </div>
                    </div>
                </div>
        </aside>

        <section class="col-lg-9 col-md-12">
            <!-- card -->
            <div class="card mb-4 bg-light border-0">
                <!-- card body -->
                <div class=" card-body p-9">
                    <h1 class="mb-0 fs-1">商品區</h1>
                </div>
            </div>
            
            <!-- row -->
            <div>
                <div class="row g-4 row-cols-xl-4 row-cols-lg-3 row-cols-2 row-cols-md-2 mt-2">
                    <div class="col-3" v-for="item in searchFilter">
                        <div class="card p-3 my-1 " style="border:none">
                            <img :src="'/system/'+ item.productsImagePath" class="card-img-top" alt="" data-bs-toggle="modal">
                            <div class="card-body">
                                <div style="height:40px">
                                    <h5 class="card-title">{{item.productsName}}</h5>
                                </div>
                                <p class="card-text">${{item.productsPrice}}</p>
                                <div class="my-2" style="display:block">
                                    <vue-number-input v-model="item.qty" :min="0" :max="1000" inline controls>
                                    </vue-number-input>
                                </div>
                                <button @@click="addCart(item)" class="btn btn-danger col-12">加入購物車</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-5">
                <div class="col">
                    <nav aria-label="Page navigation example">
                        <ul class="pagination justify-content-center">
                            <li class="page-item disabled">
                                <a class="page-link">Previous</a>
                            </li>
                            <li class="page-item"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item">
                                <a class="page-link" href="#">Next</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </section>
    </div>
</div>



<script src="~/js/vue-number-input.js"></script>
<script>
    Vue.use(VueNumberInput);
    Vue.component('vue-number-input', VueNumberInput);
    let product = new Vue({
        el: "#product",
        data: {
            products: [],
            items: [],
            keywords: "",
            keynumber: "",
            price: "30000",
        },
        computed: {
            searchFilter: function () {
                let self = this;
                return self.products.filter(result => {
                    if (result.productsName.toLowerCase().includes(self.keywords.toLowerCase())) {
                        if (result.itemId.toString().toLowerCase().includes(self.keynumber.toString().toLowerCase())) {
                            if (result.productsPrice < self.price) {
                                return result
                            }
                        }
                    }
                })
            },
        },
        mounted: function () {
            let self = this;            
            self.GetItem();
            self.GetProduct();
        },
        methods: {
            reset() {
                this.keywords = "";
                this.keynumber = "";
                this.price = 30000;
            },
            selectType(x) {
                let key = this.items[x].id;
                this.keynumber = key;
            },
            GetItem: function () {
                let self = this;
                fetch("/api/Product/GetItem")
                    .then(function (response) { return response.json() })
                    .then(function (result) {
                        self.items = result.map(function (x) {
                            return x
                        })
                    })
            },
            GetProduct: function () {
                let self = this;
                fetch("/api/Product/GetProduct")
                    .then(function (response) { return response.json() })
                    .then(function (result) {
                        self.products = result.map(function (x) {
                            x.qty = 0;
                            return x
                        })
                    })
            },
            addCart: function (product) {
                console.log(product)
                let data = {
                    ProductId: product.productsId,
                    Count: product.qty
                }
                fetch("/api/Cart/post", {
                    body: JSON.stringify(data),
                    headers: {
                        'content-type': 'application/json'
                    },
                    method: 'POST',
                })
            }
        }
    })

</script>