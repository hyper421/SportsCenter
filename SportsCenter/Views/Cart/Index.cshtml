<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
      integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
<style>
    body {
        color: black;
    }

    .ordertitle {
        color: black;
    }

    body td {
        color: black;
    }

    .table {
        border: 1px solid;
        border-color: rgb(75, 53, 53);
    }

    .ordertitle {
        text-align: center;
    }

    tr td {
        text-align: center;
    }

    .delbtn {
        color: red;
    }

    .movebtn {
        background-color: rgb(214, 18, 126);
        color: rgba(240, 248, 255, 0.72);
        border-radius: 4px;
        height: 30px;
        width: 50px;
    }

    .form {
        padding-left: 50px;
    }

    .finish {
        float: right;
        padding-right: 60px;
    }

    .finishbtn {
        width: 90px;
        font-size: x-large;
        border-radius: 4px;
        color: white;
    }

        .finishbtn:hover {
            color: white;
            background-color: #001935;
            border: 2px #003C9D solid;
        }

    #cart {
        padding: 15px 50px;
    }
</style>
<div class="back_re">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="title">
                    <h2>購物車</h2>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 訂單資料表 -->
<div id="cart">
    <form action="">
        <div>
            <div class="container-fluid mt-2">
                <div class="row">
                    <div class="col-12 ">
                        <table class="table">
                            <thead>
                                <tr class="ordertitle">
                                    <th>編號</th>
                                    <th>產品名稱</th>
                                    <th>價格</th>
                                    <th>數量</th>
                                    <th>細項總額</th>
                                    <th></th>
                                </tr>
                            </thead>

                            <tr v-for="(order,index) in product" :key="order.productId">
                                <td scope="row">{{order.productId}}</td>
                                <td class="product_name">{{order.productName}}</td>
                                <td class="product_price">${{order.productPrice}}</td>
                                <td class="product_count">
                                    <span>{{order.productCount}}</span>
                                </td>
                                <td class="product_total">${{order.productPrice*order.productCount}}</td>
                                <td class="move">
                                    <button type="button" v-on:click="Delete(order)" class="movebtn">刪除</button>
                                </td>
                            </tr>
                        </table>
                        <div class="row finish">
                            <div class="col-12">
                                <span style="font-size:x-large">總金額 :{{totalPrice}}</span>
                                <button type="button" class="finishbtn btn-primary" @@click="readyToPay">結帳</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <div>
                <label style="font-size:x-large;">收件人名稱 :</label>
                <input type="text" style="width:400px" v-model="name">
            </div>
            <div class="mt-3">
                <label style="font-size:x-large;">收件人地址 :</label>
                <input type="text" style="width:400px" v-model="address">
            </div>
            <div class="mt-3">
                <label style="font-size:x-large;">收件人電話 :</label>
                <input type="text" style="width:400px" v-model="phone">
            </div>
            <div class="mt-3">
                <label style="font-size:x-large;">收件人信箱 :</label>
                <input type="text" style="width:400px" v-model="email">
            </div>
        </div>
    </form>
</div>





<script>
    let cart = new Vue({
        el: '#cart',
        data: {
            product: [],
            name:"",
            address:"",
            email:"",
            phone:"",
            id:"",
        },
        methods: {
            getData: function () {
                let self = this;
                fetch("/api/Cart/Get")
                    .then(function (response) { return response.json() })
                    .then(function (result) {
                        self.product = result.data
                    })
            },
            getUser: function () {
                let self = this;
                axios.get('/api/Cart/GetUser').then(result => {
                    self.name = result.data.name;
                    self.address = result.data.address;
                    self.email = result.data.email;
                    self.phone = result.data.phone;
                });
            },
            Delete: function () {
                let self = this;
                fetch("/api/Cart/Delete")
                    .then(function (response) { return response.json() })
                    .then(function (result) {
                        self.product = result.data
                    })
            },
            move: function (index) {
                console.log(this);
                this.product.splice(index, 1);
            },
            cratePayForm:function(data){
                let form = document.createElement('form');
                form.action = "https://ccore.newebpay.com/MPG/mpg_gateway";
                form.method = "post";
                for (let key in data)
                {
                    let inp = document.createElement("input");
                    inp.name = key.charAt(0).toUpperCase() + key.slice(1);
                    inp.value = data[key];
                    inp.type = "hidden";
                    form.append(inp);
                }
                document.body.appendChild(form);
                form.submit();
            },
            readyToPay:function(){
                let self = this;
                axios.post('/api/cart/getInfoData',
                {
                    TotalPrice:self.totalPrice,
                    phone:self.phone,
                    address:self.address
                }).then((result)=> {
                    console.log(result.data);
                    self.cratePayForm(result.data);
                })
            }
        },
        computed: {
            totalPrice: function () {
                var totalPrice = 0
                for (let i = 0; i < this.product.length; i++) {
                    totalPrice += this.product[i].productCount * this.product[i].productPrice;
                }
                return totalPrice;
            }
        },
        mounted: function () {
            this.getData();
            this.getUser();
        }
    })
</script>

